<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--导入属性配置-->
    <properties resource="application.properties"></properties>

    <!--指定特定数据库的jdbc驱动jar包的位置-->
    <classPathEntry
            location="/Users/qihuajun/.m2/repository/mysql/mysql-connector-java/8.0.15/mysql-connector-java-8.0.15.jar"/>

    <context id="default" targetRuntime="MyBatis3">

        <!-- 在原先的基础上进行覆盖，不然相同的语句会生成多条 -->
        <property name="mergeable" value="false"></property>
        <!-- 这个插件的作用配合上面进行覆盖 -->
        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin" />

        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>


        <!--jdbc的数据库连接 -->
        <jdbcConnection
                driverClass="com.mysql.cj.jdbc.Driver"
                connectionURL="jdbc:mysql://172.24.0.65:3308/mbase?characterEncoding=utf8"
                userId="root"
                password="edison">
        </jdbcConnection>


        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
            <property name="useJSR310Types" value="true"/>
        </javaTypeResolver>


        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
        <!--<javaModelGenerator targetPackage="com.mall.pojo" targetProject=".\src\main\java">-->
        <javaModelGenerator targetPackage="com.socialtouch.martech.mbasedataprocess.entity" targetProject="./src/main/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
        </javaModelGenerator>

        <!--mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <!--<sqlMapGenerator targetPackage="mappers" targetProject=".\src\main\resources">-->
        <sqlMapGenerator targetPackage="mappers" targetProject="./src/main/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->

        <!-- targetPackage：mapper接口dao生成的位置 -->
        <!--<javaClientGenerator type="XMLMAPPER" targetPackage="com.mall.dao" targetProject=".\src\main\java">-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.socialtouch.martech.mbasedataprocess.dao" targetProject="./src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>


        <!--&lt;!&ndash;tableName表名，domainObjectName生成Java类的类名，enableCountByExample是否可以通过对象查数量,其他类似&ndash;&gt;-->
        <!--用这个配置-->
        <!--<table tableName="rel_brand_weibo_status" domainObjectName="RelBrandWeiboStatus" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" selectByExampleQueryId="false"></table>-->
        <!--<table tableName="rel_weibo_brand_topic" domainObjectName="RelWeiboBrandTopic" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" selectByExampleQueryId="false"></table>-->
        <!--<table tableName="rel_weibo_topic_status" domainObjectName="RelWeiboTopicStatus" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" selectByExampleQueryId="false"></table>-->
        <!--<table tableName="report_date_weibo_topic_voice" domainObjectName="ReportDateWeiboTopicVoice" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" selectByExampleQueryId="false"></table>-->
        <!--<table tableName="report_date_brand_top_topic" domainObjectName="ReportDateBrandTopTopic" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" selectByExampleQueryId="false"></table>-->
        <!--<table tableName="report_date_brand_weibo_topic_kol" domainObjectName="ReportDateBrandWeiboTopicKol"-->
        <!--enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"-->
        <!--selectByExampleQueryId="false"></table>-->
        <!--<table tableName="report_date_industry_weibo_kol" domainObjectName="ReportDateIndustryWeiboKol"-->
        <!--enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"-->
        <!--selectByExampleQueryId="false"></table>-->
        <!--<table tableName="system_config" domainObjectName="SystemConfig"-->
        <!--enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"-->
        <!--selectByExampleQueryId="false"></table>-->
        <table tableName="weibo_status" domainObjectName="WeiboStatus" enableCountByExample="false"
               enableUpdateByExample="false" enableDeleteByExample="false" selectByExampleQueryId="false">
            <columnOverride column="pos" javaType="int"/>
        </table>
        <!--<table tableName="weibo_user" domainObjectName="WeiboUser" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" selectByExampleQueryId="false"></table>-->
        <!--<table tableName="report_date_brand_weibo" domainObjectName="ReportDateBrandWeibo" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" selectByExampleQueryId="false"></table>-->

        <!--tableName表名，domainObjectName生成Java类的类名，enableCountByExample是否可以通过对象查数量,其他类似-->
        <!--多个表时写多个table标签即可-->
        <!--<table tableName="student">-->
        <!--</table>-->

        <!-- geelynote mybatis插件的搭建 -->
    </context>
</generatorConfiguration>